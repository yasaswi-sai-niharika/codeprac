class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class CircularLinkedList:
    def __init__(self):
        self.head = None
         
    def insert(self, newnode): 
        node = self.head
        newnode.next = self.head
        if self.head is None:
            self.head = newnode
            self.head.next = self.head
            return
        else:
            while node.next is not self.head:
                node = node.next
            node.next = newnode
            return
            
    def __repr__(self):
        node = self.head
        nodes = []
        while node.next is not self.head:
            nodes.append(node.data)
            node = node.next
        nodes.append(node.data)
        nodes.append(self.head.data)
        return " <-> ".join(nodes)
        
clist = CircularLinkedList()
a = clist.insert(Node("a"))
b = clist.insert(Node("b"))
c = clist.insert(Node("c"))
print(clist)
d = clist.insert(Node("d"))
print(clist)


#output
a <-> b <-> c <-> a
a <-> b <-> c <-> d <-> a
