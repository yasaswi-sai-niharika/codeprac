#mergesort
# uses divide and conquer 
# first split array into 2 subarrays, then divide them again until arrays has no elements or one element. sort each array and combines all. 

#time complexity O(n^2)
#space complexity O(logn)

def mergesort(arr):
    if len(arr)>1:
        mid=len(arr)//2
        l=arr[:mid]
        r=arr[mid:]
        merge(l)
        merge(r)
        i = j = k = 0
        while i < len(l) and j < len(r):
            if l[i] <= r[j]:
                arr[k]=l[i]
                i+=1
            
            else:
                arr[k]=r[j]
                j+=1
            k+=1
        while i<len(l):
            arr[k]=l[i]
            i+=1
            k+=1
        while j<len(r):
            arr[k]=r[j]
            j+=1
            k+=1
arr=[8,7,6,1,0,9,2]
mergesort(arr)
print(arr)
                
                
#output
# [0, 1, 2, 6, 7, 8, 9]
